type
  THashTable=array[0..255] of Integer;
var
  fInsensitiveHashTable, fSensitiveHashTable: THashTable;
  fIdentTable: array[0..255] of Longword;
  fIdentTable2: array[0..255] of Longword;

function ismax(i,max:integer; st,sf:string):string;
begin
  if i=max then
    result:=st
  else
    result:=sf;
end;

var
  J: Char;
  I:integer;
  s:String;
  fs:TFileStream;
begin
  for I:=0 to 255 do
  begin
    fIdentTable[I]:=0;
    fIdentTable2[I]:=0;
    j:=chr(ord(i));
    if check(j,'[a]-[z] [A]-[Z]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 0);

    if check(j,'0-32 [<] [>]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 1);
    
    if check(j,'0-32 [/] [>]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 2);

    if check(j,'0-32 [/] [>] [=]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 3);

    if check(j,'0 39 [\] [<]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 4);

    if check(j,'0 ["] [\] [<]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 5);

    if check(j, '0-32 [<] [>] [&]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 6);

    if check(j, '[a]-[z] [A]-[Z] [:] [-]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 7);

    if check(j, '[a]-[z] [A]-[Z] [\] [_] [-]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 8);

    if check(j, '[a]-[z] [A]-[Z] [\] [0]-[9] [-] [_]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 9);
      
    if check(j, '[a]-[f] [A]-[F] [0]-[9]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 10);

    if check(j, '0-32 [/]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 11);

    if check(j, '0-32 [/] [#] [!] [;] [}] [+] [-] [0]-[9] [.] [,] ["] 39 [<]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 12);

    if check(j, '[0]-[9] [.]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 13);

    if check(j, '0-32 [(] [)] [,] [\] [<]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 14);

    if check(j, '[a]-[z] [A]-[Z] [_]') then
      fIdentTable[I]:=fIdentTable[I] or (1 shl 15);

    if check(j, '[a]-[z] [A]-[Z] [_] [0]-[9]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 16);

    if check(j, '0 [%] [?]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 17);

    if check(j, '[n] [r] [t] [\] [$] 34 [0]-[7] [x]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 18);

    if check(j, '0 [-] [<]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 19);

    if check(j, '0 [<] [>]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 20);

    if check(j, '0 39 [<]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 21);

    if check(j, '0 ["] [<]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 22);

    if check(j, '0-32 [<] [>] [/]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 23);

    if check(j, '0 39 [\]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 24);

    if check(j, '0 ["] [\] [{] [$]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 25);
      
    if check(j, '0 [*] [<]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 26);

    if check(j, '0 [`] [\]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 27);

    if check(j, '[a]-[z] [A]-[Z] [_] $7F-$FF') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 28);

    if check(j, '[a]-[z] [A]-[Z] [_] [0]-[9] $7F-$FF') then   
      fIdentTable[I]:=fIdentTable[I] or (1 shl 29);

    if check(j, '0 [\] [{] [$]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 30);

    if check(j, '[\] [{] [}] [[] []] [$] ["]') then 
      fIdentTable[I]:=fIdentTable[I] or (1 shl 31);
      
// fIdentTable2 ----------------------------------------------------------------
     
    if check(j, '0-32 [>]') then 
      fIdentTable2[I]:=fIdentTable2[I] or (1 shl 0);
      
    if check(j, '0-32 [<] []]') then 
      fIdentTable2[I]:=fIdentTable2[I] or (1 shl 1);
                                     
    if check(j, '[$] [_] [a]-[z] [A]-[Z] [0]-[9]') then 
      fIdentTable2[I]:=fIdentTable2[I] or (1 shl 2);
                                    
    if check(j, '0 34 [<] [\]') then 
      fIdentTable2[I]:=fIdentTable2[I] or (1 shl 3);
                                    
    if check(j, '0 39 [<] [\]') then 
      fIdentTable2[I]:=fIdentTable2[I] or (1 shl 4);
                                     
// -----------------------------------------------------------------------------

    J:=UpCase(chr(ord(I)));
    if check(chr(ord(i)),'[A]-[Z] [a]-[z] [:] [-]') then
      fInsensitiveHashTable[I]:=Ord(J) - 64
    else
      fInsensitiveHashTable[I]:=0;

    if check(chr(ord(i)), '[a]-[z] [:] [-]') then
      fSensitiveHashTable[I]:=Ord(J) - 64
    else
      if check(chr(ord(i)), '[A]-[Z]') then
        fSensitiveHashTable[I]:=Ord(LoCase(chr(ord(i)))) - 64
      else
        fSensitiveHashTable[I]:=0;  
  end;
  s:='  TSynWebIdentTable: array[#$00..#$FF] of Longword=('#13#10'    ';
  i:=0;
  while i<=255 do 
  begin
    s:=s+'$'+IntToHex(fIdentTable[I],8)+ismax(i,255,');',', ');
    i:=i+1;
    if i mod 4=0 then
      s:=TrimRight(s)+#13#10+'    ';
  end;
  s:=trimRight(s)+#13#10#13#10;
  
  s:=s+'  TSynWebIdentTable2: array[#$00..#$FF] of Longword=('#13#10'    ';
  i:=0;
  while i<=255 do 
  begin
    s:=s+'$'+IntToHex(fIdentTable2[I],8)+ismax(i,255,');',', ');
    i:=i+1;
    if i mod 4=0 then
      s:=TrimRight(s)+#13#10+'    ';
  end;
  s:=trimRight(s)+#13#10#13#10;
  
  s:=s+'  TSynWebInsensitiveHashTable: TSynWebHashTable=('#13#10'    ';
  i:=0;
  while i<=255 do 
  begin
    s:=s+'$'+IntToHex(fInsensitiveHashTable[I],8)+ismax(i,255,');',', ');
    i:=i+1;
    if i mod 4=0 then
      s:=TrimRight(s)+#13#10+'    ';
  end;
  s:=trimRight(s)+#13#10#13#10;
  
  s:=s+'  TSynWebSensitiveHashTable: TSynWebHashTable=('#13#10'    ';
  i:=0;
  while i<=255 do 
  begin
    s:=s+'$'+IntToHex(fSensitiveHashTable[I],8)+ismax(i,255,');',', ');
    i:=i+1;
    if i mod 4=0 then
      s:=TrimRight(s)+#13#10+'    ';
  end;
  s:=trimRight(s)+#13#10#13#10;
  
  
  fs:=TFileStream.Create(OutDir+'SynHighlighterWeb_Tables.inc',fmCreate);
  fs.Write(s,length(s));
  fs.Free;
  writeln(s);
end.